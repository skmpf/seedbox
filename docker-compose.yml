x-environment: &default-environment
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: ${TZ}

x-common: &common
  restart: unless-stopped

services:
  adguardhome:
    <<: *common
    image: adguard/adguardhome
    container_name: adguardhome
    network_mode: host
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 80:80/tcp
      - 443:443/tcp
      - 443:443/udp
      - 3000:3000/tcp
    volumes:
      - ${DOCKERCONFDIR}/adguardhome/work:/opt/adguardhome/work
      - ${DOCKERCONFDIR}/adguardhome/conf:/opt/adguardhome/conf
    environment:
      <<: [*default-environment]

  cloudflared:
    <<: *common
    image: cloudflare/cloudflared
    container_name: cloudflared-tunnel
    command: tunnel run
    environment:
      <<: [*default-environment]
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}

  gluetun:
    <<: *common
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    network_mode: bridge
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      # other ports
      - 8080:8080 # qbitorrent
      - 6881:6881 # qbitorrent
      - 6881:6881/udp # qbitorrent
    volumes:
      - ${DOCKERCONFDIR}/gluetun:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      <<: [*default-environment]
      VPN_SERVICE_PROVIDER: ${VPN_SERVICE_PROVIDER}
      VPN_TYPE: wireguard
      # OpenVPN:
      # OPENVPN_USER:
      # OPENVPN_PASSWORD:
      # Wireguard:
      WIREGUARD_PRIVATE_KEY: ${WIREGUARD_PRIVATE_KEY}
      WIREGUARD_ADDRESSES: ${WIREGUARD_ADDRESSES}
      WIREGUARD_PRESHARED_KEY: ${WIREGUARD_PRESHARED_KEY}
      SERVER_REGIONS: France
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      # UPDATER_PERIOD:

  jackett:
    <<: *common
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      <<: [*default-environment]
      AUTO_UPDATE: true #optional
      # RUN_OPTS: #optional
    volumes:
      - ${DOCKERCONFDIR}/jackett:/config
    ports:
      - 9117:9117

  jellyfin:
    <<: *common
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      <<: [*default-environment]
      UMASK_SET: 022 #optional
      # JELLYFIN_PublishedServerUrl: 192.168.0.5 #optional
    group_add:
      - "107"
    volumes:
      - ${DOCKERCONFDIR}/jellyfin:/config
      - ${DOCKERSTORAGEDIR}/media:/data
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 8096:8096
      # - 8920:8920 #optional
      # - 7359:7359/udp #optional
      # - 1900:1900/udp #optional

  jellyseerr:
    <<: *common
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      <<: [*default-environment]
      LOG_LEVEL: debug
    ports:
      - 5055:5055
    volumes:
      - ${DOCKERCONFDIR}/jellyseerr:/app/config

  plex:
    <<: *common
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      <<: [*default-environment]
      VERSION: docker
      # PLEX_CLAIM: https://plex.tv/claim #optional
    volumes:
      - ${DOCKERCONFDIR}/plex:/config
      - ${DOCKERSTORAGEDIR}/media:/shared/media

  plextraktsync:
    <<: *common
    image: lscr.io/linuxserver-labs/plextraktsync:latest
    container_name: plextraktsync
    volumes:
      - ${DOCKERCONFDIR}/plextraktsync:/config
    environment:
      <<: [*default-environment]

  portainer:
    <<: *common
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERCONFDIR}/portainer:/data
    environment:
      <<: [*default-environment]

  qbittorrent:
    <<: *common
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      <<: [*default-environment]
      WEBUI_PORT: 8080
      TORRENTING_PORT: 6881
      DOCKER_MODS: ghcr.io/gabe565/linuxserver-mod-vuetorrent
    volumes:
      - ${DOCKERCONFDIR}/qbittorrent:/config
      - ${DOCKERSTORAGEDIR}:/shared
    depends_on:
      - gluetun
    network_mode: "service:gluetun"

  radarr:
    <<: *common
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ${DOCKERCONFDIR}/radarr:/config
      - ${DOCKERSTORAGEDIR}:/shared
    ports:
      - 7878:7878
    environment:
      <<: [*default-environment]

  readeck:
    <<: *common
    image: codeberg.org/readeck/readeck:latest
    container_name: readeck
    ports:
      - 8000:8000
    environment:
      <<: [*default-environment]
      # Defines the application log level. Can be error, warning, info, debug.
      READECK_LOG_LEVEL: info
      # The IP address on which Readeck listens.
      READECK_SERVER_HOST: 0.0.0.0
      # The TCP port on which Readeck listens. Update container port above to match (right of colon).
      READECK_SERVER_PORT: 8000
      # The URL prefix of Readeck.
      READECK_SERVER_PREFIX: /
      # A list of hostnames allowed in HTTP requests. Required for reverse proxy configuration.
      READECK_ALLOWED_HOSTS: "${DOCKERHOST},later.${DOMAIN}"
      # Use the 'X-Forwarded-' headers. Required for reverse proxy configuration.
      READECK_USE_X_FORWARDED: true
    volumes:
      - ${DOCKERCONFDIR}/readeck:/readeck
    healthcheck:
      test: ["CMD", "/bin/readeck", "healthcheck", "-config", "config.toml"]
      interval: 30s
      timeout: 2s
      retries: 3

  sonarr:
    <<: *common
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    volumes:
      - ${DOCKERCONFDIR}/sonarr:/config
      - ${DOCKERSTORAGEDIR}:/shared
    ports:
      - 8989:8989
    environment:
      <<: [*default-environment]

  uptime-kuma:
    <<: *common
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    ports:
      - 3001:3001 # <Host Port>:<Container Port>
    volumes:
      - ${DOCKERCONFDIR}/uptime-kuma:/app/data
    environment:
      <<: [*default-environment]

  watchtower:
    <<: *common
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      <<: [*default-environment]
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: false
      WATCHTOWER_NO_RESTART: false
      WATCHTOWER_TIMEOUT: 30s
      WATCHTOWER_SCHEDULE: 0 0 4 * * *
      WATCHTOWER_DEBUG: false

  zerotier:
    <<: *common
    image: zerotier/zerotier-synology
    container_name: zerotier
    devices:
      - /dev/net/tun
    network_mode: host
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    volumes:
      - ${DOCKERCONFDIR}/zerotier:/var/lib/zerotier-one
    environment:
      <<: [*default-environment]
